---
import Layout from '../layouts/Layout.astro';
import CopyIcon from '../components/icons/CopyIcon.astro';
import CodeBox from '../components/CodeBox.astro';
import { Code } from 'astro:components';
const theme ={
	animation: [
		"background-shine",
		"fade-in",
		"fade-out",
		"slide-in-top",
		"slide-in-bottom",
		"slide-out-top",
		"slide-out-bottom",
		"zoom-in",
		"zoom-out",
		"rotate-90",
		"rotate-180",
		"rotate-360",
		"flip-horizontal",
		"flip-vertical",
		"bounce",
		"swing",
		"wobble",
		"pulse",
		"shake",
		"tada",
		"jump",
		"hang",
		"roll-in",
		"roll-out",
		"float",
		"sink",
		"flash",
		"jiggle",
		"rubber-band",
		"slide-in-left",
		"slide-in-right",
		"slide-out-left",
		"slide-out-right",
		"spin-clockwise",
		"spin-counter-clockwise",
		"flip-x",
		"flip-y",
		"blink",
		"pop",
		"expand-horizontally",
		"contract-horizontally",
		"expand-vertically",
		"contract-vertically",
		"fade-in-up",
		"fade-in-down",
		"fade-in-left",
		"fade-in-right",
		"fade-out-up",
		"fade-out-down",
		"fade-out-left",
		"fade-out-right",
		"sway",
		"flip-in-x",
		"flip-in-y",
		"flip-out-x",
		"flip-out-y",
		"rotate-in",
		"rotate-out",
		"slide-rotate-in",
		"slide-rotate-out",
		"heartbeat",
		"blurred-fade-in",
		"horizontal-vibration",
		"rotational-wave",
		"skew",
		"vertical-bounce",
		"horizontal-bounce",
		"tilt",
		"squeeze",
		"slide-up-fade",
		"bounce-fade-in",
		"swing-drop-in",
		"pulse-fade-in"
	]
}
const { animation } = theme;
---

<Layout title="TailwindCSS animations">
	
	<main class="p-4 sm:p-5">
		<header class="w-full sm:max-w-4xl mx-auto flex items-center justify-center flex-col py-10 sm:text-left text-center">
			<h1 class="text-5xl font-bold text-sky-500">TailwindCSS animations</h1>
			<h2 class="text-xl font-medium opacity-75 mt-2 text-slate-400">The best plugin of animations for TailwindCSS</h2>
			<ol class="flex item-center flex-col gap-2 mt-10">
				<li>
					<p class="text-sm font-medium text-white">1. Install the depencendency from npm or pnpm</p>
					<CodeBox text={"Code to install the npm package"}>
						<pre class='flex text-left text-xs'>
							<Code wrap={true} theme="dark-plus" lang="shell" code='npm install @pgcode/tailwind-animations'/>
						</pre>
						<button id="btnClipPad" arial-label="Copy the npm rule to install the package" class="p-1 hover:bg-slate-600 rounded-xl transition flex items-center justify-center flex-col">
							<CopyIcon data-code="npm install @pgcode/tailwind-animations"/>
						</button>
					</CodeBox>
				</li>
				<li>
					<p class="text-sm font-medium text-white">2. Add this into your tailwind.config.js</p>
					<CodeBox text={"Code to add in tailwind.config.js"}>
						<pre class='flex text-left text-xs'>
							<Code wrap={true} theme="dark-plus" lang="js" code={`import animations from '@pgcode/tailwind-animations'
export default {
	// ...rest of the options
	plugins: [animations],
}`} />
						</pre>
					</CodeBox>
						
				</li>
			</ol>
		</header>

		<section class="max-w-4xl mx-auto grid grid-cols-2 sm:grid-cols-3 gap-4 mb-20">
			{
				animation.map(singleAnimation => {
					return (
						<article class="relative col-span-1 rounded-md p-2 border bg-slate-600 border-gray-200 cursor-crosshair transition hover:border-gray-400 hover:shadow" data-class={singleAnimation}>
							<div class="p-4 flex gap-4 items-center justify-center flex-col w-full h-full">
								<div id="box" class="w-16 h-16 bg-gray-200 rounded-md flex items-center justify-center"></div>
								<h3 class="text-sm font-semibold">{singleAnimation}</h3>
							</div>
							<button
								id="btnClipBoards"
								arial-label={`Copy ${singleAnimation.split('-').join(' ')} animation`}
								class='absolute right-2 top-2'
							>
								<CopyIcon data-code={`animate-${singleAnimation}`}/>
							</button>
						</article>
					)
				})
			}
		</section>


	</main>
</Layout>

<script>
	import { toast } from 'wc-toast';

	const $articles = document.querySelectorAll('article');
	$articles.forEach($article => {
		const animation = $article.dataset.class;
		const animationClass = `animate-${animation}`;
		const $box = $article.querySelector('#box');

		if($box){
			$article.addEventListener('mouseenter', () =>{
				$box.classList.add(animationClass);
			});
			$article.addEventListener('mouseleave', () =>{
				$box.classList.remove(animationClass);
			});
		}
	
	});

	const copyToClipboard = ($htmlElement: Element | null):void => {
		if($htmlElement){
			$htmlElement.addEventListener('click', () =>{
				const $code = $htmlElement.querySelector('svg')?.dataset.code;
				if(!$code) return null;
				navigator.clipboard.writeText($code);
				toast('Copied to clipboard!', {
						icon: {
							type: 'success',
							content: 'Copied to clipboard'
						},
						theme: {
						type: 'dark'
					}
				})
			});
		}
	}
	const $btnClipPad = document.querySelector('#btnClipPad');
	copyToClipboard($btnClipPad);

	const $btnClipBoards = document.querySelectorAll('#btnClipBoards');
	$btnClipBoards.forEach($btn => {
		copyToClipboard($btn);
	});
	
</script>
